import { SVC } from 'scikitjs'

// Model weights dan normalizer (tidak ada perubahan di sini)
export const normalizer = {
  mean: [5.4414062, 102.583984, 3.0473957, 13.312175, 32.052082, 95.52734],
  std: [2.2206898, 1.3689892, 1.1779854, 3.1176934, 7.264704, 27.897495],
}

// Kumpulan parameter untuk semua model, sekarang dengan tipe
export const modelParameters = {
  // --- Model SVM ---
  all_data: {
    type: 'svm',
    // Parameter SVM yang Anda berikan, disesuaikan untuk scikit-js
    support_vectors_: [[0.7018511891365051, 1.0343512296676636, 0.9784536361694336, -1.1906797885894775, -0.5577766299247742, 0.33955222368240356, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], [-1.549701452255249, -1.1570466756820679, -0.5495786070823669, 0.15646997094154358, 0.8187419176101685, 1.4149175882339478, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [2.5030932426452637, -1.1570466756820679, -0.8042508363723755, -1.3189798593521118, 1.644653081893921, 1.2356899976730347, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0], [-1.099390983581543, 1.0343512296676636, -0.8042508363723755, 1.118719458580017, -0.007169192191213369, -1.0942683219909668, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [-1.549701452255249, 1.7648171186447144, -0.8891414999961853, 1.118719458580017, -0.9707321524620056, 1.5941451787948608, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [-0.19876988232135773, -0.4265806972980499, 0.8086723685264587, -1.5435048341751099, -1.6589914560317993, -0.19813047349452972, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [-0.19876988232135773, 1.0343512296676636, -0.9740321636199951, 0.38099485635757446, -0.14482104778289795, -0.19813047349452972, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [-0.6490803956985474, 1.0343512296676636, 1.5726886987686157, -1.3831298351287842, -0.14482104778289795, -0.5565856099128723, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.2515406608581543, 1.7648171186447144, -0.9740321636199951, -1.2869048118591309, 1.644653081893921, 0.8772348761558533, 1.0,  0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], [-1.099390983581543, 0.6691182255744934, 0.044656068086624146, 0.18854478001594543, 0.543438196182251, -1.0942683219909668, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], [2.0527827739715576, -0.4265806972980499, -0.9740321636199951, 0.0923200398683548, -0.5577766299247742, -0.19813047349452972, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0], [0.2515406608581543, -0.4265806972980499, -1.2287042140960693, 0.7658947706222534, 0.8187419176101685, 0.33955222368240356, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [-1.549701452255249, 0.30388525128364563, -0.2949065864086151, 1.4073948860168457, -0.8330802917480469, -1.2734957933425903, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], [-0.19876988232135773, 1.0343512296676636, 1.6575793027877808, -1.254830002784729, -0.14482104778289795, -1.0942683219909668, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], [-0.19876988232135773, 0.30388525128364563, 0.46910953521728516, 0.4130699932575226, 1.5070011615753174, -0.37735801935195923, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [-1.099390983581543, 0.30388525128364563, -0.21001596748828888, -0.9661548733711243, 1.094045639038086, -0.5565856099128723, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], [-1.099390983581543, 1.0343512296676636, -0.21001596748828888, -0.613330066204071, 0.543438196182251, 1.4149175882339478, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], [-0.6490803956985474, 1.0343512296676636, 1.5726886987686157, -0.0680549293756485, -1.3836877346038818, 0.8772348761558533, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [-1.099390983581543, 1.7648171186447144, -0.6344694495201111, -0.10013005137443542, 0.9563937783241272, 0.16032464802265167, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0], [0.2515406608581543, -0.4265806972980499, 1.1482352018356323, -0.6454048752784729, -0.14482104778289795, -0.5565856099128723, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [0.2515406608581543, -0.4265806972980499, -0.04023454338312149, -1.4152050018310547, -0.2824729084968567, -0.5565856099128723, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [0.2515406608581543, 1.7648171186447144, -1.2287042140960693, -1.5114296674728394, 0.8187419176101685, -0.19813047349452972, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.2515406608581543, 0.30388525128364563, 1.4877980947494507, -0.1642799824476242, -0.2824729084968567, 1.5941451787948608, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [-0.19876988232135773, -1.1570466756820679, -0.8891414999961853, 0.12439484894275665, 0.13048265874385834, -0.5565856099128723, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [-1.099390983581543, 1.0343512296676636, 0.6388909816741943, -1.5114296674728394, 1.644653081893921, 0.5187797546386719, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], [-0.6490803956985474, -1.1570466756820679, 0.9784536361694336, -1.5114296674728394, -1.3836877346038818, 1.4149175882339478, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [-0.19876988232135773, 1.0343512296676636, 1.402907133102417, -0.9020048975944519, -0.9707321524620056, -0.9150407314300537, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], [-1.549701452255249, 1.0343512296676636, -0.4646880030632019, 0.2526950240135193, -1.1083840131759644, -0.19813047349452972, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0], [-1.099390983581543, 0.30388525128364563, 1.6575793027877808, 0.22061990201473236, 0.13048265874385834, 0.698007345199585, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], [-1.099390983581543, 0.30388525128364563, 1.1482352018356323, 0.830044686794281, 1.7823048830032349, -0.5565856099128723, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [-1.099390983581543, 1.0343512296676636, 0.5540003776550293, 0.12439484894275665, -1.2460358142852783, 0.33955222368240356, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [0.7018511891365051, -1.8875125646591187, -1.2287042140960693, 0.6375948786735535, 0.13048265874385834, -0.018902907148003578, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2.0527827739715576, 0.6691182255744934, -0.37979739904403687, -0.420879989862442, 1.644653081893921, -0.018902907148003578, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0], [-1.099390983581543, 1.0343512296676636, 0.8086723685264587, 0.6055197715759277, -1.3836877346038818, 0.5187797546386719, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [-0.6490803956985474, 0.30388525128364563, -0.7193600535392761, -1.4793548583984375, 1.5070011615753174, -0.018902907148003578, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [-1.099390983581543, 1.0343512296676636, -0.2949065864086151, 1.5998444557189941, -0.14482104778289795, -0.5565856099128723, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0], [-1.099390983581543, 1.7648171186447144, -0.04023454338312149, 0.28476983308792114, -0.8330802917480469, 0.33955222368240356, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0], [1.152161717414856, -0.4265806972980499, 1.5726886987686157, -1.4793548583984375, -0.42012473940849304, 1.0564624071121216, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0], [-1.099390983581543, 1.0343512296676636, 0.2993282973766327, 0.7979698777198792, 0.543438196182251, 1.0564624071121216, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0], [-1.099390983581543, 1.0343512296676636, 0.9784536361694336, -0.99822998046875, 0.4057863652706146, 1.0564624071121216, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [1.152161717414856, -1.1570466756820679, -0.21001596748828888, -0.613330066204071, -1.1083840131759644, 1.4149175882339478, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0], [-1.099390983581543, 1.0343512296676636, -0.5495786070823669, -0.7095548510551453, -0.9707321524620056, -1.2734957933425903, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0], [0.2515406608581543, -1.1570466756820679, 1.1482352018356323, 0.44514480233192444, 1.094045639038086, -1.81117844581604, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0], [-1.099390983581543, 1.0343512296676636, -0.8891414999961853, -0.0680549293756485, 0.543438196182251, -0.9150407314300537, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [-1.099390983581543, 1.0343512296676636, 0.8935630321502686, 0.5734449625015259, -0.42012473940849304, -0.19813047349452972, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [-1.099390983581543, 1.0343512296676636, 1.4877980947494507, -0.5491798520088196, 0.8187419176101685, -0.19813047349452972, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [-1.099390983581543, 1.0343512296676636, -0.21001596748828888, -0.003905004356056452, 1.7823048830032349, -0.19813047349452972, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0], [0.2515406608581543, 0.6691182255744934, -0.7193600535392761, -1.0623798370361328, -1.5213395357131958, 1.5941451787948608, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [-0.19876988232135773, 1.0343512296676636, -0.4646880030632019, 0.18854478001594543, -0.007169192191213369, -0.5565856099128723, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0], [-1.099390983581543, 1.0343512296676636, 0.9784536361694336, -0.485029935836792, -0.9707321524620056, -1.0942683219909668, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [-1.099390983581543, -0.4265806972980499, -0.2949065864086151, 1.4394694566726685, -0.007169192191213369, -0.018902907148003578, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0], [0.2515406608581543, 0.30388525128364563, 1.6575793027877808, -0.3246549367904663, 1.3693493604660034, -0.19813047349452972, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0], [0.2515406608581543, -0.4265806972980499, 0.21443749964237213, -1.5114296674728394, -0.5577766299247742, -0.19813047349452972, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0], [1.152161717414856, 1.7648171186447144, 0.6388909816741943, -0.5171050429344177, -0.2824729084968567, -1.2734957933425903, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0], [-1.099390983581543, 1.0343512296676636, -1.5682669878005981, 0.9583445191383362, -0.14482104778289795, -0.19813047349452972, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]],
    dual_coef_: [[-25.005873224683786, -35.420345997924436, -29.51835137652217, -67.30518945451037, -64.7622847272847, -9.019433960822326, -100.0, -14.696728799827504, -14.197188194448335, -79.5731521908791, -100.0, -13.67138232324171, -96.15939779338827, -95.8815659923702, -100.0, -13.91836981346227, -34.03021310481901, -52.708883335073736, -100.0, -84.3427457057841, -97.84939498316665, -30.77123222252044, -76.07861238287667, -35.623510158260935, -75.63234876676458, -56.492696401519765, -29.944525864885417, -100.0, -25.01080872898688, -100.0, 100.0, 100.0, 80.80968832167964, 49.952862361965884, 100.0, 32.85616546712821, 60.74894105150311, 100.0, 15.020332482872563, 100.0, 8.434161466252757, 10.033858362079279, 66.11613571540485, 100.0, 100.0, 100.0, 80.89758073712663, 37.83406759854389, 73.38036682796111, 100.0, 89.5589774797263, 35.28642655516093, 100.0, 16.684671076618166, 100.0]],
    intercept_: [-2.772013970590011],
  },

  // --- Model Regresi Logistik ---
  fever_general_data: {
    type: 'logistic',
    coef: [[-0.6573720403525993, -0.47243607447663594, 3.678645309662817, 3.2371620158049743, 4.696551901855814, 6.175915051852743, 2.410549576942971, 4.477206796711392, 3.8263365894504826, 2.321341552097079]],
    intercept: [-8.485163726797767],
  },
  lab_general_data: {
    type: 'logistic',
    coef: [[0.047126110380754066, -0.05994257157319192, -0.0716041299424866, 2.5529955125817874, 2.408771544215642, 3.640190234373222, 5.152675140973882, 2.240212342695381, 3.746031433426337, 3.2895133732420394, 1.0851177920100021]],
    intercept: [-10.92467979624238],
  },
  only_general_data: {
    type: 'logistic',
    coef: [[2.58216272344403, 2.392772177898991, 3.625229050500451, 5.125392380560168, 2.2396176825833938, 3.710130494872662, 3.297662907026282, 1.094513400036273]],
    intercept: [-8.493180092763275],
  },
}

function sigmoid(z: number): number {
  return 1 / (1 + Math.exp(-z))
}

function normalize(value: number, mean: number, std: number): number {
  return (value - mean) / std
}

export interface FormData {
  KDEMA: string // 'Iya' | 'Tidak'
  DDEMA: number // durasi demam
  SUHUN: number // suhu (Celsius)
  ULABO: string // 'Sudah' | 'Belum'
  JWBCS: number // WBC
  HEMOG: number // Hemoglobin
  HEMAT: number // Hematocrit
  JPLAT: number // Platelet
  SKPLA: string // sakit kepala parah
  NYMAT: string // nyeri belakang mata
  NYSEN: string // nyeri sendi/otot
  RSMUL: string // rasa logam di mulut
  HINFM: string // hilang nafsu makan
  NYPER: string // nyeri perut
  MUMUN: string // mual/muntah
  MDIAR: string // diare
}

export async function predictDengue(formData: FormData): Promise<number> {
  const isDemam = formData.KDEMA === 'Iya'
  const isUjiLab = formData.ULABO === 'Sudah'

  const normalizedData = [
    isDemam ? normalize(formData.DDEMA, normalizer.mean[0], normalizer.std[0]) : 0,
    isDemam ? normalize((formData.SUHUN * 9) / 5 + 32, normalizer.mean[1], normalizer.std[1]) : 0,
    isUjiLab ? normalize(formData.JWBCS, normalizer.mean[2], normalizer.std[2]) : 0,
    isUjiLab ? normalize(formData.HEMOG, normalizer.mean[3], normalizer.std[3]) : 0,
    isUjiLab ? normalize(formData.HEMAT, normalizer.mean[4], normalizer.std[4]) : 0,
    isUjiLab ? normalize(formData.JPLAT, normalizer.mean[5], normalizer.std[5]) : 0,
  ]

  const generalSymptoms = [
    formData.SKPLA === 'Iya' ? 1 : 0,
    formData.NYMAT === 'Iya' ? 1 : 0,
    formData.NYSEN === 'Iya' ? 1 : 0,
    formData.RSMUL === 'Iya' ? 1 : 0,
    formData.HINFM === 'Iya' ? 1 : 0,
    formData.NYPER === 'Iya' ? 1 : 0,
    formData.MUMUN === 'Iya' ? 1 : 0,
    formData.MDIAR === 'Iya' ? 1 : 0,
  ]

  let features: number[]
  let model: any

  if (isDemam && isUjiLab) {
    features = [
      normalizedData[0], normalizedData[1], normalizedData[2],
      normalizedData[3], normalizedData[4], normalizedData[5],
      ...generalSymptoms,
    ]
    model = modelParameters.all_data
  } else if (isDemam && !isUjiLab) {
    features = [normalizedData[0], normalizedData[1], ...generalSymptoms]
    model = modelParameters.fever_general_data
  } else if (!isDemam && isUjiLab) {
    features = [
      normalizedData[2], normalizedData[3],
      normalizedData[4], normalizedData[5],
      ...generalSymptoms,
    ]
    model = modelParameters.lab_general_data
  } else {
    features = generalSymptoms
    model = modelParameters.only_general_data
  }

  // --- BAGIAN PREDIKSI YANG DIPERBARUI ---
  if (model.type === 'svm') {
    // Membuat instance SVC baru
    const svc = new SVC()

    // "Memuat" model yang sudah dilatih dengan mengatur parameternya
    // @ts-ignore - Mengabaikan pemeriksaan tipe karena kita memuat parameter secara manual
    svc.support_vectors_ = model.support_vectors_
    // @ts-ignore
    svc.dual_coef_ = model.dual_coef_
    // @ts-ignore
    svc.intercept_ = model.intercept_
    // @ts-ignore - Penting untuk menentukan jumlah fitur
    svc.n_features_in_ = features.length

    // Melakukan prediksi. Input harus berupa array 2D.
    const prediction = await svc.predict([features])
    return prediction[0] // Mengembalikan hasil prediksi (0 atau 1)

  } else if (model.type === 'logistic') {
    // Logika untuk regresi logistik (tetap sama seperti sebelumnya)
    let z = model.intercept[0]
    for (let i = 0; i < features.length; i++) {
      z += model.coef[0][i] * features[i]
    }
    const probability = sigmoid(z)
    return probability >= 0.5 ? 1 : 0 // 1 = dengue, 0 = tidak dengue
  }

  // Fallback jika tipe model tidak dikenali
  return -1
}